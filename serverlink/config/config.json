{
  "server_port": 8080,
  "ws_port": 8081,
  "ws_connect_timeout": 5000,
  "ws_socket_timeout": 30000,
  "graph_version": "serverlink@1.0.0",
  "endpoint_host": "http://192.168.1.109:8000",
  "endpoints" : {
    
    "Get training data.": {
      "dest": "{{baseUrl}}/data",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries":[
        "classes",
        "labeled",
        "datumIds"
      ]
    },
    "Adds training data to the server.": {
      "dest": "{{baseUrl}}/data",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "data"},
          {"name": "tags"},
          {"name": "metadata"}
        ]
      }
    },
    "gets all keys of the metadata for all images": {
      "dest": "{{baseUrl}}/data/metadata/keys",
      "method": "get",
      "queries": [
        "metadataKeyQueries",
        "from",
        "to"
      ]
    },
    "Get raw data from the server.": {
      "dest": "{{baseUrl}}/data/raw/{name}",
      "method": "get",
      "response": "image"
    },
    "Get a reviewable piece of data.": {
      "dest": "{{baseUrl}}/data/thumbnail/{filePath}",
      "method": "get",
      "response": "image"
    },
    "find a datum by its id": {
      "dest": "{{baseUrl}}/data/{datumId}",
      "method": "get"
    },

    "Upload data to a specified class": {
      "dest": "{{baseUrl}}/dataset/upload/classifier",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "name"},
          {"name": "projectID"},
          {"name": "data"},
          {"name": "class"},
          {"name": "tags"}
        ]
      }
    },
    "upload data and labels to create a new dataset": {
      "dest": "{{baseUrl}}/dataset/upload/objectdetector",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "name"},
          {"name": "projectID"},
          {"name": "label"},
          {"name": "data"},
          {"name": "class"},
          {"name": "tags"}
        ]
      }
    },

    "Search for datasets": {
      "dest": "{{baseUrl}}/dataset",
      "method": "get",
      "queries": [
        "from",
        "to",
        "datumId",
        "projectId",
        "name"
      ]
    },
    "create a dataset from a list of labels": {
      "dest": "{{baseUrl}}/dataset",
      "method": "post",
      "body": {
        "type": "raw"
      }
    },
    "get dataset metrics from dataset id": {
      "dest": "{{baseUrl}}/dataset/metrics/{datasetId}",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      }
    },
    "get a single dataset by its dataset id": {
      "dest": "{{baseUrl}}/dataset/{datasetId}",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      }
    },

    "Get unlabelled images": {
      "dest": "{{baseUrl}}/label/session/image?",
      "method": "get",
      "queries": [
        "projectId",
        "sessionKey",
        "direction"
      ],
      "headers": {
        "Accept": "application/json"
      }
    },
    "upload label data during a labeling session": {
      "dest": "{{baseUrl}}/label/session/image",
      "method": "post",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },
    "Create a labeling session from a project id": {
      "dest": "{{baseUrl}}/label/session/create",
      "method": "post",
      "headers": {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },
    "persists a labeling session from a project id": {
      "dest": "{{baseUrl}}/label/session/persist",
      "method": "post",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },
    "Get training labels.": {
      "dest": "{{baseUrl}}/label",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "datumId",
        "projectId",
        "datasetId"
      ]
    },
    "adds a label to the server": {
      "dest": "{{baseUrl}}/label",
      "method": "post",
      "headers": {
        "Accept": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },

    "Does inference using the provided model.": {
      "dest": "{{baseUrl}}/model/inference",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "datumId",
        "modelId"
      ]
    },
    "init a specific model for inference": {
      "dest": "{{baseUrl}}/model/inference/init",
      "method": "get",
      "queries": [
        "modelId"
      ]
    },
    "fetch a dial read or an lcd read from a base64 image optionally returning an annoated base64": {
      "dest": "{{baseUrl}}/model/inference/pseg",
      "method": "post",
      "headers": {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },
    "Does inference on raw datum using the provided model. This is a debugging endpoint": {
      "dest": "{{baseUrl}}/model/inference/raw",
      "method": "post",
      "headers": {
        "Accept":"application/json"
      },
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "modelId"},
          {"name": "datumFile", "type": "file"},
          {"name": "datumBase64"}
        ]
      }
    },
    "process image with script": {
      "dest": "{{baseUrl}}/model/inference/script/{scriptName}",
      "method": "post",
      "headers": {
        "Accept":"application/json"
      }
    },

    "upload artifact during training session": {
      "dest": "{{baseUrl}}/model/train/artifact",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "weightsFile", "type": "file"}
        ]
      }
    },
    "Starts training on given dataset. Query /train/status to check out whats going on. Query /train/stop to stop it.": {
      "dest": "{{baseUrl}}/model/train/start",
      "method": "post",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },
    "Retrieve the current training status": {
      "dest": "{{baseUrl}}/model/train/status",
      "headers": {
        "Accept": "application/json"
      },
      "method": "get"
    },
    "Stops training on given dataset. Query /train/status to check out whats going on. Query /train/start to start it.": {
      "dest": "{{baseUrl}}/model/train/stop",
      "method": "post",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },

    "Get paginated models by some query.": {
      "dest": "{{baseUrl}}/model",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "includeValidationStatistics",
        "projectId",
        "name"
      ]
    },
    "Create a model from template.": {
      "dest": "{{baseUrl}}/model",
      "method": "post",
      "headers": {
        "Accept": "application/json"
      },
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "modelTemplateId"},
          {"name": "projectId"},
          {"name": "modelName"},
          {"name": "modelTemplateFileParams"}
        ]
      }
    },
    "Get a projects best model": {
      "dest": "{{baseUrl}}/model/best",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": ["projectId"]
    },
    "returns supported models": {
      "dest": "{{baseUrl}}/model/supported",
      "method": "get"
    },
    "get a model by its id": {
      "dest": "{{baseUrl}}/model/{modelId}",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      }
    },

    "find a project by project id": {
      "dest": "{{baseUrl}}/project/{projectId}",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      }
    },
    "Get paginated projects by some query.": {
      "dest": "{{baseUrl}}/project",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "datumId",
        "datasetId",
        "name"
      ]
    },
    "Create a new project.": {
      "dest": "{{baseUrl}}/project",
      "method": "post",
      "headers": {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },

    "Search for sessions": {
      "dest": "{{baseUrl}}/session",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "projectId"
      ]
    },

    "Get tags.": {
      "dest": "{{baseUrl}}/tags",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "projectId",
        "datasetId",
        "metadataKeyValueQueries"
      ]
    },
    "Add tags.": {
      "dest": "{{baseUrl}}/tags/add",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "tags"},
          {"name": "datumIds"}
        ]
      }
    },
    "remove tags.": {
      "dest": "{{baseUrl}}/tags/remove",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "tags"},
          {"name": "datumIds"}
        ]
      }
    },

    "get the templates from the server": {
      "dest": "{{baseUrl}}/template",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "from",
        "to",
        "projectId"
      ]
    },

    "upload data to add to a projects validation set for a classifier": {
      "dest": "{{baseUrl}}/validation/upload/classifier",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "projectID"},
          {"name": "className"},
          {"name": "data"}
        ]
      }
    },
    "upload data and labels to add to a object detector projects validation set": {
      "dest": "{{baseUrl}}/validation/upload/objectdetector",
      "method": "post",
      "body": {
        "type": "form-data",
        "fields": [
          {"name": "projectID"},
          {"name": "label"},
          {"name": "data"}
        ]
      }
    },

    "Get a projects validation data": {
      "dest": "{{baseUrl}}/validation",
      "method": "get",
      "headers": {
        "Accept": "application/json"
      },
      "queries": [
        "projectId",
        "modelId",
        "sessionId"
      ]
    },
    "validate a model off the current project validation set": {
      "dest": "{{baseUrl}}/validation",
      "method": "post",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "type": "raw"
      }
    },

    "fetch a single training artifact by its id.": {
      "dest": "{{baseUrl}}/artifact/{artifactId}",
      "headers": {
        "Accept": "application/json"
      }
    },
    "get all classes currently used across the mothership": {
      "dest": "{{baseUrl}}/class",
      "headers": {
        "Accept": "application/json"
      }
    }
  }
}